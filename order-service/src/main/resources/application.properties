# Application
quarkus.application.name=order-service
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %X %s %e%n
%dev.quarkus.http.port=8090
%dev.quarkus.http.host=0.0.0.0

# Temporal Configuration
quarkus.temporal.connection.target=${TEMPORAL_SERVER_URL:localhost:7233}
quarkus.temporal.namespace=default
quarkus.temporal.worker.task-queue=order-tasks
quarkus.temporal.workflow.workflow-task-timeout=15s
quarkus.grpc.server.use-separate-server=false
quarkus.temporal.identity=${quarkus.application.name}

# Database Type
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRES_USER:temporal}
quarkus.datasource.password=${POSTGRES_PASSWORD:temporal}
quarkus.datasource.jdbc.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/postgres}
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.jdbc.min-size=5
quarkus.datasource.jdbc.telemetry=true

#Hibernate settings
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
%prod.quarkus.hibernate-orm.database.generation=validate

# OpenTelemetry Configuration
quarkus.otel.metrics.enabled=true
quarkus.otel.logs.enabled=true
